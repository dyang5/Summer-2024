# quantum elementary standard monomials in partial flags
qe_pf := proc(F::Array, deg, block)
	local sz := F[block];
	cp := LinearAlgebra[Determinant](Matrix(sz,shape=identity)+t*q_mat(F));
	res := coeff(cp,t,deg);
	return res;
end proc;

# c (replaced with quantum elementary) in Universal Fulton
c := proc(F::Array, a, b)
	lenF := LinearAlgebra[Dimension](F);
	for i from 1 to lenF - 1 do
		if b >= F[i] and b <= F[i+1] then
			return qe_pf(a, F[i]);
		end if;
	end do;
end proc;

# set up for longest word Fulton
usp0 := proc(n)
  local res, i, j;
  res := 1;
  for i from 1 to n do
      res := res * sum( c(i-j,i)*(-cat(y,n+1-i))^j, j=0..i );
  end do;

  return res;
end proc;

# set up universal schubert polynomials
usp := proc(y)
	
end proc;